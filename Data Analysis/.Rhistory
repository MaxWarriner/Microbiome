setwd("~/Microbiome/Data Analysis")
library(BiocManager)
library(phyloseq)
library(tidyverse)
library(dplyr)
ps <- readRDS("categorized_data.RDS") # Load in using whatever file name you have
#Rarefy Data
set.seed(13)
ps <- rarefy_even_depth(ps, 1e+05)
#Changing the taxonomic table labels (From Rank 1~Rank 7 to Kingdom~Species)
# Access the existing taxonomy table from the phyloseq object
tax_table_ps <- tax_table(ps)[,1:7]
# Assign the modified taxonomy table back to the phyloseq object
tax_table(ps) <- tax_table_ps
#define list of factors to be tested
factors <- colnames(ps@sam_data)
library(ggrepel)
library(patchwork)
library(RColorBrewer)
library(rlang)
library(vegan)
library(dplyr)
library(MicrobiotaProcess)
metadata <- as.data.frame(sample_data(ps))  # Extract metadata
SVs <- as.data.frame(otu_table(ps))         # Extract OTU table
SVs <- data.frame(t(SVs))
taxonomy <- as.data.frame(phyloseq::tax_table(ps))    # Extract taxonomy
create_volcano_plot <- function(ps_obj, taxlevel, condition_col, metadata, SVs, taxonomy) {
browser()
# Ensure that taxonomy contains the specified level
tax_col <- colnames(taxonomy)[taxlevel]
taxonomy <- taxonomy %>%
rownames_to_column(var = "OTU_name") %>%
dplyr::select(OTU_name, !!sym(tax_col)) %>%
distinct()
# Combine SVs with taxonomy to match the specified level
SVs_with_taxonomy <- as.data.frame(SVs) %>%
rownames_to_column(var = "OTU_name")
SVs_with_taxonomy <- SVs_with_taxonomy |>
left_join(taxonomy, by = "OTU_name")
# Aggregate the SVs data to the specified taxonomic level
tax_level_SVs <- SVs_with_taxonomy %>%
dplyr::select(-OTU_name) %>%
group_by(!!sym(tax_col))
tax_level_SVs <- tax_level_SVs |>
summarise(across(everything(), ~sum(.x, na.rm = TRUE)))
tax_level_SVs <- tax_level_SVs |>
filter(!!sym(tax_col) != "none") %>%
column_to_rownames(var = tax_col)
# Convert to matrix for ALDEx2 analysis
tax_level_SVs <- as.matrix(tax_level_SVs)
condition <- as.character(as.factor(metadata[[condition_col]]))
# Run ALDEx2 analysis
aldex_data <- aldex(tax_level_SVs, conditions = condition, mc.samples = 138, test = "t", effect = TRUE)
# Combine t-test and effect size results
results <- data.frame(aldex_data)
# Merge results with taxonomy
results <- results %>%
rownames_to_column(var = tax_col)
# Create the volcano plot (before multiple testing correction)
p <- results %>%
mutate(Significant = if_else(we.ep < 0.05, TRUE, FALSE)) %>%
mutate(Taxon = as.character(!!sym(tax_col))) %>%
mutate(TaxonToPrint = if_else(we.ep < 0.05, paste(Taxon, "(", round(we.ep,3) , ")", sep = ""), "")) |>
ggplot(aes(x = diff.btw, y = -log10(we.ep), color = Significant, label = TaxonToPrint)) +
geom_text_repel(size = 4, nudge_y = 0.05, max.overlaps = Inf) +  # Increase max.overlaps
geom_point(alpha = 0.6, shape = 16) +
theme_minimal() +
xlab("log2(fold change)") +
ylab("-log10(P-value)") +
theme(legend.position = "none") +
ggtitle(paste("Factor:", condition_col,"-- Taxonomic Level:", tax_col))
return(p)
}
create_combined_volcano <- function(ps, factor, metadata, SVs, taxonomy){
volcano_plot_phylum <- create_volcano_plot(ps, 2, factor, metadata, SVs, taxonomy)
volcano_plot_family <- create_volcano_plot(ps, 5, factor, metadata, SVs, taxonomy)
volcano_plot_genus <- create_volcano_plot(ps, 6, factor, metadata, SVs, taxonomy)
combined_volcano_plot <- (volcano_plot_phylum | volcano_plot_family) / (volcano_plot_genus)
ggsave(combined_volcano_plot,
filename = paste(factor, "_volcano.pdf", sep = ""),
device = "pdf",
height = 8, width = 12, units = "in")
}
create_combined_volcano(ps, "Sex", metadata, SVs, taxonomy)
create_volcano_plot <- function(ps_obj, taxlevel, condition_col, metadata, SVs, taxonomy) {
browser()
# Get the variable values, remove NAs, and count frequencies
var_values <- metadata[[condition_col]]
non_na_values <- var_values[!is.na(var_values)]
value_counts <- table(non_na_values)
# Get top 2 most frequent non-NA values
top_values <- names(sort(value_counts, decreasing = TRUE))[1:2]
# Subset data to only include samples with top 2 non-NA values
subset_idx <- var_values %in% top_values & !is.na(var_values)
sampleda_subset <- sampleda_ordered[subset_idx, , drop = FALSE]
# Ensure that taxonomy contains the specified level
tax_col <- colnames(taxonomy)[taxlevel]
taxonomy <- taxonomy %>%
rownames_to_column(var = "OTU_name") %>%
dplyr::select(OTU_name, !!sym(tax_col)) %>%
distinct()
# Combine SVs with taxonomy to match the specified level
SVs_with_taxonomy <- as.data.frame(SVs) %>%
rownames_to_column(var = "OTU_name")
SVs_with_taxonomy <- SVs_with_taxonomy |>
left_join(taxonomy, by = "OTU_name")
# Aggregate the SVs data to the specified taxonomic level
tax_level_SVs <- SVs_with_taxonomy %>%
dplyr::select(-OTU_name) %>%
group_by(!!sym(tax_col))
tax_level_SVs <- tax_level_SVs |>
summarise(across(everything(), ~sum(.x, na.rm = TRUE)))
tax_level_SVs <- tax_level_SVs |>
filter(!!sym(tax_col) != "none") %>%
column_to_rownames(var = tax_col)
# Convert to matrix for ALDEx2 analysis
tax_level_SVs <- as.matrix(tax_level_SVs)
condition <- as.character(as.factor(metadata[[condition_col]]))
# Run ALDEx2 analysis
aldex_data <- aldex(tax_level_SVs, conditions = condition, mc.samples = 138, test = "t", effect = TRUE)
# Combine t-test and effect size results
results <- data.frame(aldex_data)
# Merge results with taxonomy
results <- results %>%
rownames_to_column(var = tax_col)
# Create the volcano plot (before multiple testing correction)
p <- results %>%
mutate(Significant = if_else(we.ep < 0.05, TRUE, FALSE)) %>%
mutate(Taxon = as.character(!!sym(tax_col))) %>%
mutate(TaxonToPrint = if_else(we.ep < 0.05, paste(Taxon, "(", round(we.ep,3) , ")", sep = ""), "")) |>
ggplot(aes(x = diff.btw, y = -log10(we.ep), color = Significant, label = TaxonToPrint)) +
geom_text_repel(size = 4, nudge_y = 0.05, max.overlaps = Inf) +  # Increase max.overlaps
geom_point(alpha = 0.6, shape = 16) +
theme_minimal() +
xlab("log2(fold change)") +
ylab("-log10(P-value)") +
theme(legend.position = "none") +
ggtitle(paste("Factor:", condition_col,"-- Taxonomic Level:", tax_col))
return(p)
}
create_combined_volcano <- function(ps, factor, metadata, SVs, taxonomy){
volcano_plot_phylum <- create_volcano_plot(ps, 2, factor, metadata, SVs, taxonomy)
volcano_plot_family <- create_volcano_plot(ps, 5, factor, metadata, SVs, taxonomy)
volcano_plot_genus <- create_volcano_plot(ps, 6, factor, metadata, SVs, taxonomy)
combined_volcano_plot <- (volcano_plot_phylum | volcano_plot_family) / (volcano_plot_genus)
ggsave(combined_volcano_plot,
filename = paste(factor, "_volcano.pdf", sep = ""),
device = "pdf",
height = 8, width = 12, units = "in")
}
create_combined_volcano(ps, "Height", metadata, SVs, taxonomy)
View(value_counts)
create_volcano_plot <- function(ps_obj, taxlevel, condition_col, metadata, SVs, taxonomy) {
browser()
# Get the variable values, remove NAs, and count frequencies
var_values <- metadata[[condition_col]]
non_na_values <- var_values[!is.na(var_values)]
value_counts <- table(non_na_values)
# Get top 2 most frequent non-NA values
top_values <- names(sort(value_counts, decreasing = TRUE))[1:2]
# Subset data to only include samples with top 2 non-NA values
subset_idx <- var_values %in% top_values & !is.na(var_values)
sampleda_subset <- metadata[subset_idx, , drop = FALSE]
# Ensure that taxonomy contains the specified level
tax_col <- colnames(taxonomy)[taxlevel]
taxonomy <- taxonomy %>%
rownames_to_column(var = "OTU_name") %>%
dplyr::select(OTU_name, !!sym(tax_col)) %>%
distinct()
# Combine SVs with taxonomy to match the specified level
SVs_with_taxonomy <- as.data.frame(SVs) %>%
rownames_to_column(var = "OTU_name")
SVs_with_taxonomy <- SVs_with_taxonomy |>
left_join(taxonomy, by = "OTU_name")
# Aggregate the SVs data to the specified taxonomic level
tax_level_SVs <- SVs_with_taxonomy %>%
dplyr::select(-OTU_name) %>%
group_by(!!sym(tax_col))
tax_level_SVs <- tax_level_SVs |>
summarise(across(everything(), ~sum(.x, na.rm = TRUE)))
tax_level_SVs <- tax_level_SVs |>
filter(!!sym(tax_col) != "none") %>%
column_to_rownames(var = tax_col)
# Convert to matrix for ALDEx2 analysis
tax_level_SVs <- as.matrix(tax_level_SVs)
condition <- as.character(as.factor(metadata[[condition_col]]))
# Run ALDEx2 analysis
aldex_data <- aldex(tax_level_SVs, conditions = condition, mc.samples = 138, test = "t", effect = TRUE)
# Combine t-test and effect size results
results <- data.frame(aldex_data)
# Merge results with taxonomy
results <- results %>%
rownames_to_column(var = tax_col)
# Create the volcano plot (before multiple testing correction)
p <- results %>%
mutate(Significant = if_else(we.ep < 0.05, TRUE, FALSE)) %>%
mutate(Taxon = as.character(!!sym(tax_col))) %>%
mutate(TaxonToPrint = if_else(we.ep < 0.05, paste(Taxon, "(", round(we.ep,3) , ")", sep = ""), "")) |>
ggplot(aes(x = diff.btw, y = -log10(we.ep), color = Significant, label = TaxonToPrint)) +
geom_text_repel(size = 4, nudge_y = 0.05, max.overlaps = Inf) +  # Increase max.overlaps
geom_point(alpha = 0.6, shape = 16) +
theme_minimal() +
xlab("log2(fold change)") +
ylab("-log10(P-value)") +
theme(legend.position = "none") +
ggtitle(paste("Factor:", condition_col,"-- Taxonomic Level:", tax_col))
return(p)
}
create_combined_volcano <- function(ps, factor, metadata, SVs, taxonomy){
volcano_plot_phylum <- create_volcano_plot(ps, 2, factor, metadata, SVs, taxonomy)
volcano_plot_family <- create_volcano_plot(ps, 5, factor, metadata, SVs, taxonomy)
volcano_plot_genus <- create_volcano_plot(ps, 6, factor, metadata, SVs, taxonomy)
combined_volcano_plot <- (volcano_plot_phylum | volcano_plot_family) / (volcano_plot_genus)
ggsave(combined_volcano_plot,
filename = paste(factor, "_volcano.pdf", sep = ""),
device = "pdf",
height = 8, width = 12, units = "in")
}
create_combined_volcano(ps, "Height", metadata, SVs, taxonomy)
View(sampleda_subset)
View(taxonomy)
View(taxonomy)
View(SVs_with_taxonomy)
View(sampleda_subset)
View(tax_level_SVs)
View(sampleda_subset)
create_combined_volcano(ps, "Height", metadata, SVs, taxonomy)
create_combined_volcano(ps, "Height", metadata, SVs, taxonomy)
create_combined_volcano(ps, "Height", metadata, SVs, taxonomy)
